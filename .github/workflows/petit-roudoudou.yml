name: 'Build & Deploy Petit Roudoudou V2'

on:
  push:
    branches: [main]

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: 'actions/checkout@v3'

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: 'Download dependencies'
        run: 'yarn install --frozen-lockfile'

      - name: 'Upload Artifacts'
        uses: 'actions/upload-artifact@v2'
        with:
          name: 'node_modules'
          path: 'node_modules'

  build:
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: 'actions/checkout@v3'

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 'Download dependencies (artifacts)'
        uses: 'actions/download-artifact@v2'
        with:
          name: 'node_modules'
          path: 'node_modules'

      - name: 'Setup .env'
        run: |
          cat <<EOF > .env
          ${{ vars.BUILD_ENV_FILE }}
          EOF
      - name: 'Build'
        run: 'yarn build'
        env:
          RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}

      - name: 'Save artifacts'
        uses: 'actions/upload-artifact@v2'
        with:
          name: 'dist'
          path: 'dist'

  build-functions:
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: 'actions/checkout@v3'

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 'Download dependencies (artifacts)'
        uses: 'actions/download-artifact@v2'
        with:
          name: 'node_modules'
          path: 'node_modules'

      - name: 'Build'
        working-directory: 'apps/functions'
        run: 'yarn build'

      - name: 'Save artifacts'
        uses: 'actions/upload-artifact@v2'
        with:
          name: 'functions'
          path: 'apps/functions/dist'

  deploy-to-cloud-run:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: 'actions/checkout@v3'

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: 'Download artifacts'
        uses: 'actions/download-artifact@v2'
        with:
          name: 'dist'
          path: 'dist'

      - name: 'Deploy to Cloud Run'
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: storefront
          region: ${{ vars.GCP_REGION_ID }}
          source: ./dist/apps/storefront
          env_vars: |
            NEXT_IMAGE_DOMAINS=${{ vars.NEXT_IMAGE_DOMAINS }}

  deploy-firebase-hosting:
    runs-on: ubuntu-latest
    needs: [deploy-to-cloud-run]
    steps:
      - uses: 'actions/checkout@v3'

      - name: Deploy Hosting
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

  deploy-firebase-without-hosting:
    runs-on: ubuntu-latest
    needs: [build-functions]
    steps:
      - uses: 'actions/checkout@v3'

      - name: 'Download Functions Artifacts'
        uses: 'actions/download-artifact@v2'
        with:
          name: 'functions'
          path: 'apps/functions/dist'

      - name: 'Download node_modules Artifacts'
        uses: 'actions/download-artifact@v2'
        with:
          name: 'node_modules'
          path: 'apps/functions/node_modules'

      - name: Deploy
        uses: w9jds/firebase-action@master
        with:
          args: deploy --except hosting
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
